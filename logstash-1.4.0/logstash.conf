input {
#  file {
#    type   => 'jbosslog'
#    path   => [ "/Users/fmadsen/branches/logstash-cartridge/logstash-1.4.0/logs/server.log" ]
#    format => 'plain'
#    start_position => "beginning"
#    sincedb_path => "/dev/null" 
#    codec => multiline {
#      pattern => "^\s"
#      what => "previous"
#    }
#  }

  file {
    type   => 'joblog'
    path   => [ "/Users/fmadsen/branches/logstash-cartridge/logstash-1.4.0/logs/job_timing.log" ]
    format => 'plain'
    start_position => "beginning"
    sincedb_path => "/dev/null" 
    codec => multiline {
      pattern => "^\s"
      what => "previous"
    }
  }
}

filter {

grok {
    type    => 'jbosslog'
    patterns_dir => [ "/Users/fmadsen/branches/logstash-1.4.0/patterns" ]
    pattern => [ "%{MYTIME:logtime} %{LOGLEVEL:loglevel}  \[%{JAVAFILE:javafile}\] \(%{THREADNAME:thread}\) %{GREEDYDATA:logmsg}", 
                 "%{MYTIME:logtime} %{LOGLEVEL:loglevel} \[%{JAVAFILE:javafile}\] \(%{THREADNAME:thread}\) %{GREEDYDATA:logmsg}" ]
}

grok {
    type    => 'joblog'
    patterns_dir => [ "/Users/fmadsen/branches/logstash-1.4.0/patterns" ]
    pattern => [ "%{MYTIME:logtime} %{LOGLEVEL:loglevel}  \[%{JAVAFILE:javafile}\] \(%{THREADNAME:thread}\) %{JOB_NAME:jobname} %{JOB_START_DATE:job_start_date} %{JOB_START_TIME:job_start_time} %{INT:job_time:int}", 
                 "%{MYTIME:logtime} %{LOGLEVEL:loglevel} \[%{JAVAFILE:javafile}\] \(%{THREADNAME:thread}\) %{GREEDYDATA:logmsg}" ]
}

  date {
    type    => 'jbosslog'
    match =>  [ "logtime", "YYYY-MM-dd HH:mm:ss,SSS" ]
    locale => "en"
  }

  date {
    type    => 'joblog'
    match =>  [ "logtime", "YYYY-MM-dd HH:mm:ss,SSS" ]
    locale => "en"
  }

#  if "_grokparsefailure" in [tags] {
#     drop { }
#  }


}

output{
        stdout { codec => rubydebug }
        elasticsearch { host => localhost } 
}
